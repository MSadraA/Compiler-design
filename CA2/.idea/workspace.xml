<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="03ae34a9-2000-4ae7-80e6-f78dfa855550" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/SimpleLang.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLang.interp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLang.tokens" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLangBaseListener.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLangBaseVisitor.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLangLexer.interp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLangLexer.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLangLexer.tokens" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLangListener.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLangParser.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/main/grammar/SimpleLangVisitor.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/SimpleLang.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/Node.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/Program.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/Stmt/Assign.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/Stmt/FuncCallStmt.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/Stmt/IfStmt.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/Stmt/Return.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/Stmt/Stmt.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/Stmt/VarDec.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/declaration/FuncDec.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/declaration/Main.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/BinaryExpr.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/Expr.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/FuncCallExpr.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/Identifier.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/UnaryExpr.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/operator/BinaryOperator.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/operator/UnaryOperator.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/primitives/BoolVal.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/primitives/DoubleVal.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/primitives/IntVal.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/ast/nodes/expr/primitives/StringVal.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLang.g4" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLang.interp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLang.tokens" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangBaseListener.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangBaseVisitor.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangLexer.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangLexer.interp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangLexer.tokens" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangListener.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$AssignContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$ExprContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$Func_callContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$Func_decContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$If_stmtContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$MainContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$Primary_exprContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$ProgramContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$Return_stmtContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$StmtContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser$Var_decContext.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangParser.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/grammar/SimpleLangVisitor.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/symbolTable/SymbolTable.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/symbolTable/exceptions/ItemAlreadyExistsException.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/symbolTable/exceptions/ItemNotFoundException.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/symbolTable/item/FuncDecSymbolTableItem.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/symbolTable/item/SymbolTableItem.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/symbolTable/item/VarDecSymbolTableItem.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/symbolTable/utils/Stack.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/visitor/IVisitor.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/visitor/NameAnalyzer.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/visitor/TestVisitor.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/SimpleLang/main/visitor/Visitor.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/samples/sample1.sl" beforeDir="false" afterPath="$PROJECT_DIR$/samples/sample1.sl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/samples/sample2.sl" beforeDir="false" afterPath="$PROJECT_DIR$/samples/sample2.sl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/samples/sample3.sl" beforeDir="false" afterPath="$PROJECT_DIR$/samples/sample3.sl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/SimpleLang.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/SimpleLang.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/Node.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/ast/nodes/Node.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/Program.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/ast/nodes/Program.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/Stmt/Assign.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/Stmt/FuncCallStmt.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/Stmt/IfStmt.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/Stmt/Return.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/Stmt/Stmt.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/Stmt/VarDec.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/declaration/FuncDec.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/ast/nodes/declaration/FuncDec.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/declaration/Main.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/BinaryExpr.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/Expr.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/FuncCallExpr.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/Identifier.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/UnaryExpr.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/operator/BinaryOperator.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/operator/UnaryOperator.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/primitives/BoolVal.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/primitives/DoubleVal.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/primitives/IntVal.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/ast/nodes/expr/primitives/StringVal.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/grammar/SimpleLang.g4" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/symbolTable/SymbolTable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/symbolTable/SymbolTable.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/symbolTable/exceptions/ItemAlreadyExistsException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/symbolTable/exceptions/ItemAlreadyExistsException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/symbolTable/exceptions/ItemNotFoundException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/symbolTable/exceptions/ItemNotFoundException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/symbolTable/item/FuncDecSymbolTableItem.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/symbolTable/item/SymbolTableItem.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/symbolTable/item/SymbolTableItem.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/symbolTable/item/VarDecSymbolTableItem.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/visitor/IVisitor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/visitor/IVisitor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/visitor/NameAnalyzer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/visitor/NameAnalyzer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/visitor/TestVisitor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/visitor/TestVisitor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/visitor/Visitor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/visitor/Visitor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/NameAnalysis/1-Variable Undefined.ans" beforeDir="false" afterPath="$PROJECT_DIR$/tests/NameAnalysis/1-Variable Undefined.ans" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/NameAnalysis/1-Variable Undefined.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/NameAnalysis/1-Variable Undefined.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/NameAnalysis/2-Function Undefined.ans" beforeDir="false" afterPath="$PROJECT_DIR$/tests/NameAnalysis/2-Function Undefined.ans" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/NameAnalysis/2-Function Undefined.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/NameAnalysis/2-Function Undefined.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/1-Unused Variables and Function Parameters.ans" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/1-Unused Variables and Function Parameters.ans" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/1-Unused Variables and Function Parameters.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/1-Unused Variables and Function Parameters.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/1-opt-Unused Variables and Function Parameters.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/1-opt-Unused Variables and Function Parameters.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/2-Statements After return.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/2-Statements After return.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/2-opt-Statements After return.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/2-opt-Statements After return.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/3-No-Effect Statements.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/3-No-Effect Statements.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/3-opt-No-Effect Statements.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/3-opt-No-Effect Statements.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/5-Typedef, Constant Replacement.ans" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/5-Typedef, Constant Replacement.ans" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/5-Typedef, Constant Replacement.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/5-Typedef, Constant Replacement.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/5-opt-Typedef, Constant Replacement.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/5-opt-Typedef, Constant Replacement.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/6-Main Access.ans" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/6-Main Access.ans" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/6-Main Access.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/6-Main Access.cpy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Optimization/6-opt-Main Access copy.cpy" beforeDir="false" afterPath="$PROJECT_DIR$/tests/Optimization/6-opt-Main Access copy.cpy" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;MSadraA&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/MSadraA/Compiler-design.git&quot;,
    &quot;accountId&quot;: &quot;412f75f8-3cb9-4a3b-bcdc-2375b4738360&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2yEpPcq252d1ikVlSNLs36QSxVr" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.Test.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/sadra/Documents/Codes/Compiler-design/phase-1-ce-MSadraA&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="Test" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="SimpleLang" />
      <module name="CA2" />
      <option name="PROGRAM_PARAMETERS" value="tests/test.sl" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Test" />
      </list>
    </recent_temporary>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="03ae34a9-2000-4ae7-80e6-f78dfa855550" name="Changes" comment="" />
      <created>1749409564302</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749409564302</updated>
    </task>
    <servers />
  </component>
</project>